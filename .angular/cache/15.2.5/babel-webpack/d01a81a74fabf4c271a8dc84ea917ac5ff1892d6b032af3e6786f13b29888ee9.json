{"ast":null,"code":"import { interval, Subject, takeUntil } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/face-snaps.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../face-snap/face-snap.component\";\nfunction FaceSnapListComponent_app_face_snap_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-face-snap\", 1);\n  }\n  if (rf & 2) {\n    const facesnap_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"faceSnap\", facesnap_r1);\n  }\n}\nexport class FaceSnapListComponent {\n  // va emmettre qu'une seule fois\n  constructor(faceSnapService) {\n    this.faceSnapService = faceSnapService;\n  }\n  ngOnInit() {\n    this.destroy$ = new Subject();\n    this.faceSnaps = this.faceSnapService.getAllFaceSnaps();\n    interval(1000).pipe( /*  take(3),//pour le control du nombre des emmissions*/\n    takeUntil(this.destroy$), tap(console.log) //console.log est la contraction de l'expression value => console.log(value)\n    ).subscribe();\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true); //Pour faire emmettre un Subject on appelle sa methode next()\n  }\n}\n\nFaceSnapListComponent.ɵfac = function FaceSnapListComponent_Factory(t) {\n  return new (t || FaceSnapListComponent)(i0.ɵɵdirectiveInject(i1.FaceSnapsService));\n};\nFaceSnapListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FaceSnapListComponent,\n  selectors: [[\"app-face-snap-list\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"faceSnap\", 4, \"ngFor\", \"ngForOf\"], [3, \"faceSnap\"]],\n  template: function FaceSnapListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FaceSnapListComponent_app_face_snap_0_Template, 1, 1, \"app-face-snap\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.faceSnaps);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.FaceSnapComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAQA,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAO,MAAM;AACjD,SAAcC,GAAG,QAAO,gBAAgB;;;;;;;ICJxCC,mCAAwF;;;;IAAtCA,sCAAqB;;;ADWvE,OAAM,MAAOC,qBAAqB;EAIhC;EAEAC,YAAoBC,eAAiC;IAAjC,oBAAe,GAAfA,eAAe;EAAoB;EAEvDC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAIR,OAAO,EAAW;IACtC,IAAI,CAACS,SAAS,GAAG,IAAI,CAACH,eAAe,CAACI,eAAe,EAAE;IAEvDX,QAAQ,CAAC,IAAI,CAAC,CAACY,IAAI,EACnB;IACEV,SAAS,CAAC,IAAI,CAACO,QAAQ,CAAC,EACxBN,GAAG,CAACU,OAAO,CAACC,GAAG,CAAC,CAAG;IAAA,CACpB,CAACC,SAAS,EAAE;EACf;EAEAC,WAAW;IACT,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3B;;;AArBWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXlClB,0FAAwF;;;MAApDA,uCAAY","names":["interval","Subject","takeUntil","tap","i0","FaceSnapListComponent","constructor","faceSnapService","ngOnInit","destroy$","faceSnaps","getAllFaceSnaps","pipe","console","log","subscribe","ngOnDestroy","next","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/isebastien/projects/snapface/src/app/face-snap-list/face-snap-list.component.ts","/home/isebastien/projects/snapface/src/app/face-snap-list/face-snap-list.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport { FaceSnap } from '../model/face-snap.model';\nimport { FaceSnapsService } from '../services/face-snaps.service';\nimport {interval, Subject, takeUntil} from \"rxjs\";\nimport {take, tap} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-face-snap-list',\n  templateUrl: './face-snap-list.component.html',\n  styleUrls: ['./face-snap-list.component.scss']\n})\nexport class FaceSnapListComponent implements OnInit, OnDestroy {\n\n  faceSnaps!: FaceSnap[];\n  destroy$!: Subject<boolean>;//Subject est un observable que l'on peut faire emmetre à la demande, destroy$ ne\n  // va emmettre qu'une seule fois\n\n  constructor(private faceSnapService: FaceSnapsService){}\n\n  ngOnInit(): void {\n    this.destroy$ = new Subject<boolean>();\n    this.faceSnaps = this.faceSnapService.getAllFaceSnaps();\n\n    interval(1000).pipe(\n    /*  take(3),//pour le control du nombre des emmissions*/\n      takeUntil(this.destroy$),\n      tap(console.log)   //console.log est la contraction de l'expression value => console.log(value)\n    ).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);//Pour faire emmettre un Subject on appelle sa methode next()\n  }\n\n}\n","<app-face-snap *ngFor=\"let facesnap of faceSnaps\" [faceSnap]=\"facesnap\"></app-face-snap>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}