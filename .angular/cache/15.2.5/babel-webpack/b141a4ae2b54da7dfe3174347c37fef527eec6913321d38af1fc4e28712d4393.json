{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FaceSnapsService {\n  constructor(http) {\n    this.http = http;\n    this.faceSnaps = [{\n      id: 1,\n      title: 'Archibald',\n      description: 'Mon meilleur ami depuis tout petit !',\n      imageUrl: 'https://cdn.pixabay.com/photo/2015/05/31/16/03/teddy-bear-792273_1280.jpg',\n      createdDate: new Date(),\n      snaps: 0,\n      location: 'Paris'\n    }, {\n      id: 2,\n      title: 'Three Rock Mountain',\n      description: 'Un endroit magnifique pour les randonnées.',\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Three_Rock_Mountain_Southern_Tor.jpg/2880px-Three_Rock_Mountain_Southern_Tor.jpg',\n      createdDate: new Date(),\n      snaps: 6,\n      location: 'la montagne'\n    }, {\n      id: 3,\n      title: 'Un bon repas',\n      description: 'Mmmh que c\\'est bon !',\n      imageUrl: 'https://wtop.com/wp-content/uploads/2020/06/HEALTHYFRESH.jpg',\n      createdDate: new Date(),\n      snaps: 167\n    }];\n  }\n  getAllFaceSnaps() {\n    return this.faceSnaps;\n  }\n  getFaceSnapById(faceSnapId) {\n    const faceSnap = this.faceSnaps.find(faceSnap => faceSnap.id === faceSnapId);\n    if (!faceSnap) throw new Error(\"FaceSnap not found !\");else return faceSnap;\n  }\n  // snapType: 'snap' | 'unsnap': cette declaration oblige tout appel à cette methode à utiliser l'un des deux arguments\n  snapFaceSnapById(faceSnapId, snapType) {\n    const faceSnap = this.getFaceSnapById(faceSnapId);\n    snapType === 'snap' ? faceSnap.snaps++ : faceSnap.snaps--;\n  }\n  addFaceSnap(formValue) {\n    const faceSnap = {\n      ...formValue,\n      snaps: 0,\n      createdDate: new Date(),\n      id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\n    };\n    this.faceSnaps.push(faceSnap);\n  }\n}\nFaceSnapsService.ɵfac = function FaceSnapsService_Factory(t) {\n  return new (t || FaceSnapsService)(i0.ɵɵinject(i1.HttpClient));\n};\nFaceSnapsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FaceSnapsService,\n  factory: FaceSnapsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAGtB,cAAS,GAAe,CACpB;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,WAAW;MAClBC,WAAW,EAAE,sCAAsC;MACnDC,QAAQ,EAAE,2EAA2E;MACrFC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;KACX,EACD;MACEP,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,qBAAqB;MAC5BC,WAAW,EAAE,4CAA4C;MACzDC,QAAQ,EAAE,4IAA4I;MACtJC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;KACX,EACD;MACEP,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAE,uBAAuB;MACpCC,QAAQ,EAAE,8DAA8D;MACxEC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,KAAK,EAAE;KACR,CACF;EA7BL;EA+BIE,eAAe;IACb,OAAO,IAAI,CAACC,SAAS;EACvB;EAEAC,eAAe,CAACC,UAAkB;IAChC,MAAMC,QAAQ,GAAE,IAAI,CAACH,SAAS,CAACI,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACZ,EAAE,KAAKW,UAAU,CAAC;IAC3E,IAAI,CAACC,QAAQ,EACX,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC,CAAC,KAExC,OAAOF,QAAQ;EACnB;EAEA;EACAG,gBAAgB,CAACJ,UAAkB,EAAEK,QAA2B;IAC9D,MAAMJ,QAAQ,GAAE,IAAI,CAACF,eAAe,CAACC,UAAU,CAAC;IAChDK,QAAQ,KAAK,MAAM,GAAGJ,QAAQ,CAACN,KAAK,EAAE,GAAGM,QAAQ,CAACN,KAAK,EAAE;EAC3D;EAEAW,WAAW,CAACC,SAA0F;IACpG,MAAMN,QAAQ,GAAa;MACzB,GAAGM,SAAS;MACZZ,KAAK,EAAE,CAAC;MACRF,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBL,EAAE,EAAE,IAAI,CAACS,SAAS,CAAC,IAAI,CAACA,SAAS,CAACU,MAAM,GAAG,CAAC,CAAC,CAACnB,EAAE,GAAG;KACpD;IACD,IAAI,CAACS,SAAS,CAACW,IAAI,CAACR,QAAQ,CAAC;EAC/B;;AA5DOf,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAwB,SAAhBxB,gBAAgB;EAAAyB,YAFf;AAAM","names":["FaceSnapsService","constructor","http","id","title","description","imageUrl","createdDate","Date","snaps","location","getAllFaceSnaps","faceSnaps","getFaceSnapById","faceSnapId","faceSnap","find","Error","snapFaceSnapById","snapType","addFaceSnap","formValue","length","push","factory","providedIn"],"sourceRoot":"","sources":["/home/isebastien/projects/snapface/src/app/services/face-snaps.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FaceSnap } from '../model/face-snap.model';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FaceSnapsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n    faceSnaps: FaceSnap[] = [\n        {\n          id: 1,\n          title: 'Archibald',\n          description: 'Mon meilleur ami depuis tout petit !',\n          imageUrl: 'https://cdn.pixabay.com/photo/2015/05/31/16/03/teddy-bear-792273_1280.jpg',\n          createdDate: new Date(),\n          snaps: 0,\n          location: 'Paris'\n        },\n        {\n          id: 2,\n          title: 'Three Rock Mountain',\n          description: 'Un endroit magnifique pour les randonnées.',\n          imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Three_Rock_Mountain_Southern_Tor.jpg/2880px-Three_Rock_Mountain_Southern_Tor.jpg',\n          createdDate: new Date(),\n          snaps: 6,\n          location: 'la montagne'\n        },\n        {\n          id: 3,\n          title: 'Un bon repas',\n          description: 'Mmmh que c\\'est bon !',\n          imageUrl: 'https://wtop.com/wp-content/uploads/2020/06/HEALTHYFRESH.jpg',\n          createdDate: new Date(),\n          snaps: 167\n        }\n      ];\n\n      getAllFaceSnaps(): FaceSnap[]{\n        return this.faceSnaps;\n      }\n\n      getFaceSnapById(faceSnapId: number): FaceSnap{\n        const faceSnap= this.faceSnaps.find(faceSnap => faceSnap.id === faceSnapId);\n        if (!faceSnap)\n          throw new Error(\"FaceSnap not found !\");\n        else\n          return faceSnap;\n      }\n\n      // snapType: 'snap' | 'unsnap': cette declaration oblige tout appel à cette methode à utiliser l'un des deux arguments\n      snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap') :void{\n        const faceSnap= this.getFaceSnapById(faceSnapId);\n        snapType === 'snap' ? faceSnap.snaps++ : faceSnap.snaps--;\n      }\n\n      addFaceSnap(formValue: { title: string, description: string, imageUrl: string, localisation?: string }) {\n        const faceSnap: FaceSnap = {\n          ...formValue,\n          snaps: 0,\n          createdDate: new Date(),\n          id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\n        };\n        this.faceSnaps.push(faceSnap);\n      }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}