{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/face-snaps.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction SingleFaceSnapComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"p\");\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(1);\n    i0.…µ…µtextInterpolate1(\"Photo prise \\u00E0 \", ctx_r0.faceSnap.location, \"\");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    snapped: a0\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    color: a0\n  };\n};\nexport class SingleFaceSnapComponent {\n  constructor(faceSnapService, route) {\n    this.faceSnapService = faceSnapService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.messageButtom = \"Oh snaps\";\n    //+ est un typecast qui permet de transformer une chaine qui\n    // contiet des nombres en des chaine de caract√®res\n    const faceSnapId = +this.route.snapshot.params['id'];\n    this.faceSnap = this.faceSnapService.getFaceSnapById(faceSnapId);\n  }\n  onSnap() {\n    if (this.messageButtom == \"Oh snaps\") {\n      this.messageButtom = \"Oups unSnaps\";\n      this.faceSnapService.snapFaceSnapById(this.faceSnap.id, 'snap');\n    } else {\n      this.faceSnapService.snapFaceSnapById(this.faceSnap.id, 'unsnap');\n      this.messageButtom = \"Oh snaps\";\n    }\n  }\n}\nSingleFaceSnapComponent.…µfac = function SingleFaceSnapComponent_Factory(t) {\n  return new (t || SingleFaceSnapComponent)(i0.…µ…µdirectiveInject(i1.FaceSnapsService), i0.…µ…µdirectiveInject(i2.ActivatedRoute));\n};\nSingleFaceSnapComponent.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n  type: SingleFaceSnapComponent,\n  selectors: [[\"app-single-face-snap\"]],\n  decls: 22,\n  vars: 26,\n  consts: [[1, \"face-snap-card\", 3, \"ngClass\"], [3, \"src\", \"alt\"], [4, \"ngIf\"], [3, \"click\"], [3, \"ngStyle\"]],\n  template: function SingleFaceSnapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.…µ…µelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.…µ…µtext(2);\n      i0.…µ…µpipe(3, \"titlecase\");\n      i0.…µ…µelementEnd();\n      i0.…µ…µelementStart(4, \"p\");\n      i0.…µ…µtext(5);\n      i0.…µ…µpipe(6, \"date\");\n      i0.…µ…µelementEnd();\n      i0.…µ…µelementStart(7, \"p\");\n      i0.…µ…µtext(8);\n      i0.…µ…µpipe(9, \"date\");\n      i0.…µ…µelementEnd();\n      i0.…µ…µelement(10, \"img\", 1);\n      i0.…µ…µelementStart(11, \"p\");\n      i0.…µ…µtext(12);\n      i0.…µ…µelementEnd();\n      i0.…µ…µtemplate(13, SingleFaceSnapComponent_p_13_Template, 2, 1, \"p\", 2);\n      i0.…µ…µelementStart(14, \"p\")(15, \"button\", 3);\n      i0.…µ…µlistener(\"click\", function SingleFaceSnapComponent_Template_button_click_15_listener() {\n        return ctx.onSnap();\n      });\n      i0.…µ…µtext(16);\n      i0.…µ…µelementEnd();\n      i0.…µ…µelementStart(17, \"span\", 4);\n      i0.…µ…µtext(18);\n      i0.…µ…µelementEnd()();\n      i0.…µ…µelementStart(19, \"p\");\n      i0.…µ…µtext(20);\n      i0.…µ…µpipe(21, \"number\");\n      i0.…µ…µelementEnd()();\n    }\n    if (rf & 2) {\n      i0.…µ…µproperty(\"ngClass\", i0.…µ…µpureFunction1(22, _c0, ctx.messageButtom === \"Oups unSnaps\"));\n      i0.…µ…µadvance(2);\n      i0.…µ…µtextInterpolate(i0.…µ…µpipeBind1(3, 12, ctx.faceSnap.title));\n      i0.…µ…µadvance(3);\n      i0.…µ…µtextInterpolate1(\"Mis en ligne le \", i0.…µ…µpipeBind2(6, 14, ctx.faceSnap.createdDate, \"dd/MM/yy, \\u00E0 HH:mm\"), \"\");\n      i0.…µ…µadvance(3);\n      i0.…µ…µtextInterpolate(i0.…µ…µpipeBind2(9, 17, ctx.faceSnap.createdDate, \"le d MMMM yyyy\"));\n      i0.…µ…µadvance(2);\n      i0.…µ…µproperty(\"src\", ctx.faceSnap.imageUrl, i0.…µ…µsanitizeUrl)(\"alt\", ctx.faceSnap.title);\n      i0.…µ…µadvance(2);\n      i0.…µ…µtextInterpolate(ctx.faceSnap.description);\n      i0.…µ…µadvance(1);\n      i0.…µ…µproperty(\"ngIf\", ctx.faceSnap.location === \"Paris la montagne\");\n      i0.…µ…µadvance(3);\n      i0.…µ…µtextInterpolate(ctx.messageButtom);\n      i0.…µ…µadvance(1);\n      i0.…µ…µproperty(\"ngStyle\", i0.…µ…µpureFunction1(24, _c1, \"rgb(0, \" + ctx.faceSnap.snaps + \", 0)\"));\n      i0.…µ…µadvance(1);\n      i0.…µ…µtextInterpolate1(\"\\uD83E\\uDD0C \", ctx.faceSnap.snaps, \"\");\n      i0.…µ…µadvance(2);\n      i0.…µ…µtextInterpolate1(\"\", i0.…µ…µpipeBind1(21, 20, 4346234.36), \"Un nombre pour la demo des pipes\");\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i3.NgStyle, i3.DecimalPipe, i3.TitleCasePipe, i3.DatePipe],\n  styles: [\".face-snap-card[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  width: 50%;\\n  margin: 20px auto;\\n  padding: 10px 30px;\\n  box-shadow: lightgray 4px 4px 20px;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-weight: 300;\\n  font-size: 16px;\\n}\\n\\n.snapped[_ngcontent-%COMP%] {\\n  background-color: rgba(144, 238, 144, 0.4);\\n  color: darkgreen;\\n}\\n.snapped[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  box-shadow: lightgreen 3px 3px 7px;\\n  color: darkgreen;\\n}\\n.snapped[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\n  box-shadow: lightgreen 0 0 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2luZ2xlLWZhY2Utc25hcC9zaW5nbGUtZmFjZS1zbmFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtDQUFBO0FBQ0Y7QUFBRTtFQUNFLFdBQUE7QUFFSjtBQUFFO0VBQ0UsZ0JBQUE7QUFFSjtBQUFFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0FBRUo7O0FBRUE7RUFDRSwwQ0FBQTtFQUNBLGdCQUFBO0FBQ0Y7QUFBRTtFQUNFLGtDQUFBO0VBQ0EsZ0JBQUE7QUFFSjtBQURJO0VBQ0UsOEJBQUE7QUFHTiIsInNvdXJjZXNDb250ZW50IjpbIi5mYWNlLXNuYXAtY2FyZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICBwYWRkaW5nOiAxMHB4IDMwcHg7XG4gIGJveC1zaGFkb3c6IGxpZ2h0Z3JheSA0cHggNHB4IDIwcHg7XG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgaDIge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgcCB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbn1cblxuLnNuYXBwZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKGxpZ2h0Z3JlZW4sIDAuNCk7XG4gIGNvbG9yOiBkYXJrZ3JlZW47XG4gIGJ1dHRvbiB7XG4gICAgYm94LXNoYWRvdzogbGlnaHRncmVlbiAzcHggM3B4IDdweDtcbiAgICBjb2xvcjogZGFya2dyZWVuO1xuICAgICY6YWN0aXZlIHtcbiAgICAgIGJveC1zaGFkb3c6IGxpZ2h0Z3JlZW4gMCAwIDVweDtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAMEA,yBAAmD;IAAAA,YAAqC;IAAAA,iBAAI;;;;IAAzCA,eAAqC;IAArCA,0EAAqC;;;;;;;;;;;;;ACI1F,OAAM,MAAOC,uBAAuB;EASlCC,YAAoBC,eAAiC,EAAUC,KAAqB;IAAhE,oBAAe,GAAfD,eAAe;IAA4B,UAAK,GAALC,KAAK;EAAmB;EAGvFC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,UAAU;IAC/B;IACA;IACA,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACP,eAAe,CAACQ,eAAe,CAACJ,UAAU,CAAC;EAClE;EAEAK,MAAM;IACJ,IAAG,IAAI,CAACN,aAAa,IAAI,UAAU,EAAC;MAClC,IAAI,CAACA,aAAa,GAAG,cAAc;MACnC,IAAI,CAACH,eAAe,CAACU,gBAAgB,CAAC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE,MAAM,CAAC;KAChE,MACG;MACF,IAAI,CAACX,eAAe,CAACU,gBAAgB,CAAC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE,QAAQ,CAAC;MACjE,IAAI,CAACR,aAAa,GAAG,UAAU;;EAEnC;;AA7BWL,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVpCnB,8BAAqF;MAC/EA,YAAgC;;MAAAA,iBAAK;MACzCA,yBAAG;MAAAA,YAAsE;;MAAAA,iBAAI;MAC7EA,yBAAG;MAAAA,YAAkD;;MAAAA,iBAAI;MACzDA,0BAAsD;MACtDA,0BAAG;MAAAA,aAA0B;MAAAA,iBAAI;MACjCA,sEAA4F;MAC5FA,0BAAG;MACOA;QAAA,OAASoB,YAAQ;MAAA,EAAC;MAACpB,aAAiB;MAAAA,iBAAS;MACrDA,gCAAiE;MAAAA,aAAuB;MAAAA,iBAAO;MAEjGA,0BAAG;MAAAA,aAAyD;;MAAAA,iBAAI;;;MAXtCA,2FAAwD;MAC9EA,eAAgC;MAAhCA,+DAAgC;MACjCA,eAAsE;MAAtEA,wHAAsE;MACtEA,eAAkD;MAAlDA,uFAAkD;MAChDA,eAAyB;MAAzBA,6DAAyB;MAC3BA,eAA0B;MAA1BA,8CAA0B;MACzBA,eAA6C;MAA7CA,oEAA6C;MAEpBA,eAAiB;MAAjBA,uCAAiB;MACtCA,eAA0D;MAA1DA,8FAA0D;MAACA,eAAuB;MAAvBA,8DAAuB;MAEvFA,eAAyD;MAAzDA,iGAAyD","names":["i0","SingleFaceSnapComponent","constructor","faceSnapService","route","ngOnInit","messageButtom","faceSnapId","snapshot","params","faceSnap","getFaceSnapById","onSnap","snapFaceSnapById","id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/isebastien/projects/snapface/src/app/single-face-snap/single-face-snap.component.html","/home/isebastien/projects/snapface/src/app/single-face-snap/single-face-snap.component.ts"],"sourcesContent":["<div class=\"face-snap-card\" [ngClass]=\"{snapped : messageButtom === 'Oups unSnaps'}\">\n  <h2>{{ faceSnap.title | titlecase }}</h2>\n  <p>Mis en ligne le {{ faceSnap.createdDate | date: 'dd/MM/yy, √† HH:mm' }}</p>\n  <p>{{ faceSnap.createdDate| date: 'le d MMMM yyyy' }}</p>\n  <img [src]=\"faceSnap.imageUrl\" [alt]=\"faceSnap.title\">\n  <p>{{ faceSnap.description }}</p>\n  <p *ngIf=\"faceSnap.location==='Paris la montagne'\">Photo prise √† {{ faceSnap.location }}</p>\n  <p>\n    <button (click)=\"onSnap()\">{{messageButtom}}</button>\n    <span [ngStyle]=\"{ color: 'rgb(0, ' + faceSnap.snaps + ', 0)' }\">ü§å {{ faceSnap.snaps }}</span>\n  </p>\n  <p>{{ 4346234.36 | number }}Un nombre pour la demo des pipes</p>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FaceSnap} from \"../model/face-snap.model\";\nimport {FaceSnapsService} from \"../services/face-snaps.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-single-face-snap',\n  templateUrl: './single-face-snap.component.html',\n  styleUrls: ['./single-face-snap.component.scss']\n})\nexport class SingleFaceSnapComponent implements OnInit{\n\n  /*\n  Pour qu'une propri√©t√© puisse √™tre inject√©e depuis\n   l'ext√©rieur d'un component, il faut lui ajouter le d√©corateur  @Input()\n   */\n  faceSnap! : FaceSnap;\n  messageButtom! : string;\n\n  constructor(private faceSnapService: FaceSnapsService, private route: ActivatedRoute) {}\n\n\n  ngOnInit(): void {\n    this.messageButtom = \"Oh snaps\";\n    //+ est un typecast qui permet de transformer une chaine qui\n    // contiet des nombres en des chaine de caract√®res\n    const faceSnapId = +this.route.snapshot.params['id'];\n    this.faceSnap = this.faceSnapService.getFaceSnapById(faceSnapId);\n  }\n\n  onSnap(){\n    if(this.messageButtom == \"Oh snaps\"){\n      this.messageButtom = \"Oups unSnaps\";\n      this.faceSnapService.snapFaceSnapById(this.faceSnap.id, 'snap');\n    }\n    else{\n      this.faceSnapService.snapFaceSnapById(this.faceSnap.id, 'unsnap');\n      this.messageButtom = \"Oh snaps\";\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}