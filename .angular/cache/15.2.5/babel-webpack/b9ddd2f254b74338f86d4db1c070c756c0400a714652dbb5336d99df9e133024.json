{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/face-snaps.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction NewFaceSnapComponent_div_24_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const faceSnap_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Photo prise \\u00E0 \", faceSnap_r1.location, \"\");\n  }\n}\nfunction NewFaceSnapComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"img\", 15);\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, NewFaceSnapComponent_div_24_p_10_Template, 2, 1, \"p\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const faceSnap_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 6, faceSnap_r1.title));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Mis en ligne \", i0.ɵɵpipeBind2(6, 8, faceSnap_r1.createdDate, \"\\u00E0 HH:mm, le d MMMM yyyy\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", faceSnap_r1.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", faceSnap_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(faceSnap_r1.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", faceSnap_r1.location);\n  }\n}\nexport class NewFaceSnapComponent {\n  constructor(formBuilder, faceSnapService, router) {\n    this.formBuilder = formBuilder;\n    this.faceSnapService = faceSnapService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.snapForm = this.formBuilder.group({\n      title: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n      imageUrl: [null, [Validators.required, Validators.pattern(this.urlRegex)]],\n      location: [null]\n    }, {\n      updateOn: \"blur\"\n    });\n    this.faceSnapPreview$ = this.snapForm.valueChanges.pipe(map(formValue => ({\n      ...formValue,\n      createdDate: new Date(),\n      snaps: 0,\n      id: 0\n    })));\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n  }\n  onSubmitForm() {\n    this.faceSnapService.addFaceSnap(this.snapForm.value);\n    this.router.navigateByUrl('/facesnaps');\n  }\n}\nNewFaceSnapComponent.ɵfac = function NewFaceSnapComponent_Factory(t) {\n  return new (t || NewFaceSnapComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FaceSnapsService), i0.ɵɵdirectiveInject(i3.Router));\n};\nNewFaceSnapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewFaceSnapComponent,\n  selectors: [[\"app-new-face-snap\"]],\n  decls: 26,\n  vars: 5,\n  consts: [[1, \"form-card\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"id\", \"description\", \"type\", \"text\", \"formControlName\", \"description\", \"rows\", \"4\"], [\"for\", \"imageUrl\"], [\"id\", \"imageUrl\", \"type\", \"text\", \"formControlName\", \"imageUrl\"], [\"for\", \"location\"], [\"id\", \"location\", \"type\", \"text\", \"formControlName\", \"location\"], [1, \"action-buttons\"], [\"type\", \"submit\", 3, \"disabled\", \"click\"], [\"class\", \"face-snap-card\", 4, \"ngIf\"], [1, \"face-snap-card\"], [3, \"src\", \"alt\"], [4, \"ngIf\"]],\n  template: function NewFaceSnapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"NOUVEAU FACESNAP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Titre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"textarea\", 6);\n      i0.ɵɵtext(12, \"        \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"URL de l'image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Lieu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function NewFaceSnapComponent_Template_button_click_22_listener() {\n        return ctx.onSubmitForm();\n      });\n      i0.ɵɵtext(23, \"Enregistrer\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(24, NewFaceSnapComponent_div_24_Template, 11, 11, \"div\", 13);\n      i0.ɵɵpipe(25, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.snapForm);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"disabled\", ctx.snapForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(25, 3, ctx.faceSnapPreview$));\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe, i4.UpperCasePipe, i4.DatePipe],\n  styles: [\".form-card[_ngcontent-%COMP%], .face-snap-card[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  width: 50%;\\n  margin: 20px auto;\\n  padding: 10px 30px;\\n  box-shadow: lightgray 4px 4px 20px;\\n}\\n\\n.face-snap-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-weight: 300;\\n  font-size: 16px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin: 10px auto;\\n  width: 80%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\ninput[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: 20px auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV3LWZhY2Utc25hcC9uZXctZmFjZS1zbmFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7RUFDQSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtDQUFBO0FBQ0Y7O0FBR0U7RUFDRSxXQUFBO0FBQUo7QUFFRTtFQUNFLGdCQUFBO0FBQUo7QUFFRTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQUFKOztBQUlBO0VBQ0UsaUJBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFERjs7QUFJQTtFQUNFLFVBQUE7QUFERjs7QUFJQTtFQUNFLFdBQUE7QUFERjs7QUFJQTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtBQURGIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY2FyZCwgLmZhY2Utc25hcC1jYXJkIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luOiAyMHB4IGF1dG87XG4gIHBhZGRpbmc6IDEwcHggMzBweDtcbiAgYm94LXNoYWRvdzogbGlnaHRncmF5IDRweCA0cHggMjBweDtcbn1cblxuLmZhY2Utc25hcC1jYXJkIHtcbiAgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBoMiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICBwIHtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgfVxufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbjogMTBweCBhdXRvO1xuICB3aWR0aDogODAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbmlucHV0LCB0ZXh0YXJlYSB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5hY3Rpb24tYnV0dG9ucyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5idXR0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAyMHB4IGF1dG87XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAgCA,UAAU,QAAO,gBAAgB;AAGjE,SAAQC,GAAG,QAAO,gBAAgB;;;;;;;;IC2BhCC,yBAA6B;IAAAA,YAAqC;IAAAA,iBAAI;;;;IAAzCA,eAAqC;IAArCA,sEAAqC;;;;;IALpEA,+BAAyE;IACnEA,YAAgC;;IAAAA,iBAAK;IACzCA,yBAAG;IAAAA,YAAyE;;IAAAA,iBAAI;IAChFA,0BAAsD;IACtDA,yBAAG;IAAAA,YAA0B;IAAAA,iBAAI;IACjCA,2EAAsE;IACxEA,iBAAM;;;;IALAA,eAAgC;IAAhCA,6DAAgC;IACjCA,eAAyE;IAAzEA,yHAAyE;IACvEA,eAAyB;IAAzBA,4DAAyB;IAC3BA,eAA0B;IAA1BA,6CAA0B;IACzBA,eAAuB;IAAvBA,2CAAuB;;;ADlB7B,OAAM,MAAOC,oBAAoB;EAM/BC,YACUC,WAAwB,EACxBC,eAAiC,EACjCC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;EAEhB;EACAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACrCC,KAAK,EAAE,CAAC,IAAI,EAAE,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACpCC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACb,UAAU,CAACY,QAAQ,CAAC,CAAC;MAC1CE,QAAQ,EAAE,CAAC,IAAI,EAAE,CAACd,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACe,OAAO,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC1EC,QAAQ,EAAE,CAAC,IAAI;KAChB,EAAE;MACDC,QAAQ,EAAE;KACX,CAAC;IAEF,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACV,QAAQ,CAACW,YAAY,CAACC,IAAI,CACrDpB,GAAG,CAACqB,SAAS,KAAK;MAChB,GAAGA,SAAS;MACZC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,KAAK,EAAE,CAAC;MACRC,EAAE,EAAE;KACL,CAAC,CAAC,CACJ;IAED,IAAI,CAACV,QAAQ,GAAG,gGAAgG;EAClH;EAEAW,YAAY;IACV,IAAI,CAACrB,eAAe,CAACsB,WAAW,CAAC,IAAI,CAACnB,QAAQ,CAACoB,KAAK,CAAC;IACrD,IAAI,CAACtB,MAAM,CAACuB,aAAa,CAAC,YAAY,CAAC;EACzC;;AArCW3B,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjCjC,8BAAuB;MACjBA,gCAAgB;MAAAA,iBAAK;MACzBA,+BAA6B;MAENA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAsD;MACxDA,iBAAM;MACNA,8BAAwB;MACGA,4BAAW;MAAAA,iBAAQ;MAC5CA,oCAA8E;MAC5EA;MAAAA,iBAAW;MAEfA,+BAAwB;MACAA,+BAAc;MAAAA,iBAAQ;MAC5CA,4BAA4D;MAC9DA,iBAAM;MACNA,+BAAwB;MACAA,qBAAI;MAAAA,iBAAQ;MAClCA,6BAA4D;MAC9DA,iBAAM;MACNA,gCAA4B;MACJA;QAAA,OAASkC,kBAAc;MAAA,EAAC;MAAiClC,4BAAW;MAAAA,iBAAS;MAKzGA,0EAMM;;;;MA9BEA,eAAsB;MAAtBA,wCAAsB;MAmBuBA,gBAA6B;MAA7BA,+CAA6B;MAKrDA,eAA+B;MAA/BA,kEAA+B","names":["Validators","map","i0","NewFaceSnapComponent","constructor","formBuilder","faceSnapService","router","ngOnInit","snapForm","group","title","required","description","imageUrl","pattern","urlRegex","location","updateOn","faceSnapPreview$","valueChanges","pipe","formValue","createdDate","Date","snaps","id","onSubmitForm","addFaceSnap","value","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/isebastien/projects/snapface/src/app/new-face-snap/new-face-snap.component.ts","/home/isebastien/projects/snapface/src/app/new-face-snap/new-face-snap.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {FaceSnap} from \"../model/face-snap.model\";\nimport {map} from \"rxjs/operators\";\nimport {FaceSnapsService} from \"../services/face-snaps.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-new-face-snap',\n  templateUrl: './new-face-snap.component.html',\n  styleUrls: ['./new-face-snap.component.scss']\n})\nexport class NewFaceSnapComponent implements OnInit{\n\n  snapForm!: FormGroup;\n  urlRegex!: RegExp;\n  faceSnapPreview$!: Observable<FaceSnap>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private faceSnapService: FaceSnapsService,\n    private router: Router\n  ) {\n  }\n  ngOnInit(): void {\n    this.snapForm = this.formBuilder.group({\n      title: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n      imageUrl: [null, [Validators.required, Validators.pattern(this.urlRegex)]],\n      location: [null]\n    }, {\n      updateOn: \"blur\"\n    });\n\n    this.faceSnapPreview$ = this.snapForm.valueChanges.pipe(\n      map(formValue => ({\n        ...formValue,\n        createdDate: new Date(),\n        snaps: 0,\n        id: 0\n      }))\n    );\n\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n  }\n\n  onSubmitForm(){\n    this.faceSnapService.addFaceSnap(this.snapForm.value);\n    this.router.navigateByUrl('/facesnaps');\n  }\n\n}\n","<div class=\"form-card\">\n  <h2>NOUVEAU FACESNAP</h2>\n  <form [formGroup]=\"snapForm\">\n    <div class=\"form-group\">\n      <label for=\"title\">Titre</label>\n      <input id=\"title\" type=\"text\" formControlName=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" type=\"text\" formControlName=\"description\" rows=\"4\">\n        </textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"imageUrl\">URL de l'image</label>\n      <input id=\"imageUrl\" type=\"text\" formControlName=\"imageUrl\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"location\">Lieu</label>\n      <input id=\"location\" type=\"text\" formControlName=\"location\">\n    </div>\n    <div class=\"action-buttons\">\n      <button type=\"submit\" (click)=\"onSubmitForm()\" [disabled]=\"snapForm.invalid\"  >Enregistrer</button>\n    </div>\n  </form>\n</div>\n\n<div class=\"face-snap-card\" *ngIf=\"faceSnapPreview$ | async as faceSnap\">\n  <h2>{{ faceSnap.title | uppercase }}</h2>\n  <p>Mis en ligne {{ faceSnap.createdDate | date: 'à HH:mm, le d MMMM yyyy' }}</p>\n  <img [src]=\"faceSnap.imageUrl\" [alt]=\"faceSnap.title\">\n  <p>{{ faceSnap.description }}</p>\n  <p *ngIf=\"faceSnap.location\">Photo prise à {{ faceSnap.location }}</p>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}