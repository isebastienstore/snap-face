{"ast":null,"code":"import { filter, interval, map, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./header/header.component\";\nimport * as i3 from \"@angular/common\";\nexport class AppComponent {\n  ngOnInit() {\n    this.inteval$ = interval(1000).pipe(\n    //permet de filtrer les emmissions\n    filter(value => value % 3 === 0),\n    //permet de transformer les emmissions\n    map(value => value % 2 === 0 ? `Je suis ${value} et je suis pair` : `Je suis ${value} et je suis impar`),\n    //permet d'ajouter des effets sécondaires à un observable\n    tap(value => this.logger(value)));\n  }\n  logger(text) {\n    console.log(`Log: ${text}`);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 3,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"app-header\")(4, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx.inteval$));\n    }\n  },\n  dependencies: [i1.RouterOutlet, i2.HeaderComponent, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,MAAM,EAAEC,QAAQ,EAAEC,GAAG,EAAcC,GAAG,QAAO,MAAM;;;;;AAO3D,OAAM,MAAOC,YAAY;EAEvBC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGL,QAAQ,CAAC,IAAI,CAAC,CAACM,IAAI;IACjC;IACAP,MAAM,CAACQ,KAAK,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAE;IACjC;IACAN,GAAG,CAACM,KAAK,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,WAAWA,KAAK,kBAAkB,GAAG,WAAWA,KAAK,mBAAmB,CAAC;IACxG;IACAL,GAAG,CAACK,KAAK,IAAI,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC,CAAC,CACjC;EACH;EAEAC,MAAM,CAACC,IAAY;IACjBC,OAAO,CAACC,GAAG,CAAC,QAAQF,IAAI,EAAE,CAAC;EAC7B;;AAfWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAS;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,0BAAI;MAAAA,YAAqB;;MAAAA,iBAAK;MAC9BA,6BAAyB;;;MADrBA,eAAqB;MAArBA,wDAAqB","names":["filter","interval","map","tap","AppComponent","ngOnInit","inteval$","pipe","value","logger","text","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/isebastien/projects/snapface/src/app/app.component.ts","/home/isebastien/projects/snapface/src/app/app.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FaceSnap } from './model/face-snap.model';\nimport {filter, interval, map, Observable, tap} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  inteval$! : Observable<string>;\n  ngOnInit() {\n    this.inteval$ = interval(1000).pipe(\n      //permet de filtrer les emmissions\n      filter(value => value % 3 === 0 ),\n      //permet de transformer les emmissions\n      map(value => value % 2 === 0 ? `Je suis ${value} et je suis pair` : `Je suis ${value} et je suis impar`),\n      //permet d'ajouter des effets sécondaires à un observable\n      tap(value => this.logger(value))\n    );\n  }\n\n  logger(text: string){\n    console.log(`Log: ${text}`);\n  }\n}\n","<h1>{{ inteval$ | async}}</h1>\n<app-header></app-header>\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}