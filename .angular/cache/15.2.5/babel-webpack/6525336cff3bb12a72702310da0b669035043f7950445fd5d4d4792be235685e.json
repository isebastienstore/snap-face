{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./core/components/header/header.component\";\nexport class AppComponent {\n  constructor() {\n    this.redTrainsCalled = 0;\n    this.yellowTrainsCalled = 0;\n  }\n  ngOnInit() {\n    /*\n    interval(500).pipe(\n      take(10),\n      map(value => value % 2 === 0 ? 'rouge' : 'jaune'),\n      tap(color => console.log(`La lumière s'allume en %c${color}`, `color: ${this.translateColor(color)}`)),\n      mergeMap(color => this.getTrainObservable$(color)),\n      tap(train => console.log(`Train %c${train.color} ${train.trainIndex} arrivé !`, `font-weight: bold; color: ${this.translateColor(train.color)}`))\n    ).subscribe();\n          */\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i1.RouterOutlet, i2.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,YAAY;EALzBC;IAOE,oBAAe,GAAG,CAAC;IACnB,uBAAkB,GAAG,CAAC;;EAEtBC,QAAQ;IAEN;;;;;;;;;EAAA;;AAPSF,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,6BAAyB","names":["AppComponent","constructor","ngOnInit","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/isebastien/projects/snapface/src/app/app.component.ts","/home/isebastien/projects/snapface/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { interval, of } from 'rxjs';\nimport { concatMap, mergeMap, delay, exhaustMap, map, switchMap, take, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  redTrainsCalled = 0;\n  yellowTrainsCalled = 0;\n\n  ngOnInit() {\n\n    /*\n    interval(500).pipe(\n      take(10),\n      map(value => value % 2 === 0 ? 'rouge' : 'jaune'),\n      tap(color => console.log(`La lumière s'allume en %c${color}`, `color: ${this.translateColor(color)}`)),\n      mergeMap(color => this.getTrainObservable$(color)),\n      tap(train => console.log(`Train %c${train.color} ${train.trainIndex} arrivé !`, `font-weight: bold; color: ${this.translateColor(train.color)}`))\n    ).subscribe();\n\n     */\n  }\n\n\n/*\n  getTrainObservable$(color: 'rouge' | 'jaune') {\n    const isRedTrain = color === 'rouge';\n    isRedTrain ? this.redTrainsCalled++ : this.yellowTrainsCalled++;\n    const trainIndex = isRedTrain ? this.redTrainsCalled : this.yellowTrainsCalled;\n    console.log(`Train %c${color} ${trainIndex} appelé !`, `text-decoration: underline; color: ${this.translateColor(color)}`);\n    return of({ color, trainIndex }).pipe(\n      delay(isRedTrain ? 5000 : 6000)\n    );\n  }\n\n  translateColor(color: 'rouge' | 'jaune') {\n    return color === 'rouge' ? 'red' : 'yellow';\n  }\n\n\n */\n}\n\n\n  /*\n\n  ngOnInit() {\n    this.inteval$ = interval(1000).pipe(\n      //permet de filtrer les emmissions\n      filter(value => value % 3 === 0 ),\n      //permet de transformer les emmissions\n      map(value => value % 2 === 0 ? `Je suis ${value} et je suis pair` : `Je suis ${value} et je suis impar`),\n      //permet d'ajouter des effets sécondaires à un observable\n      tap(value => this.logger(value))\n    );\n  }\n\n  logger(text: string){\n    console.log(`Log: ${text}`);\n  }\n\n*/\n","<app-header></app-header>\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}